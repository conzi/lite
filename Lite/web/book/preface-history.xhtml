<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-CN" dir="ltr">
	<head>
		<title>模板引擎的前身今世</title>
	</head>
	<body>
		<h3>元气未分，浑沌为一</h3>
		<p>在古老的CGI时代，网页程序通常是C/Perl编写的；里面无所谓模板，也无所谓逻辑，大家都交织在一起。</p>
		<h3>阳清为天，阴浊为地</h3>
		<p>
			然而随着程序逻辑的复杂化，这个混沌的UI层总是成为程序复杂度的瓶颈。需要简化逻辑，我们需要吧代码按功能层次分离，逻辑的归逻辑，展示的归展示。
		</p>
		<p>
			于是，一些创新的技术出现了，譬如ASP，PHP，JSP。这些新的技术可以认为是一种模板的雏形，但是他们也都带有未进化完整的程序的尾巴。
		</p>
		<p>
			里面总可以有一些足够你不安的行为,我们可以在JSP里面把你的服务强行关闭，可以在php上删掉你的配置文件，等等等等。
		</p>
		<p>
			这并不是模板逻辑的要求，随着技术的发展，一些更加纯粹的模板技术出现了，比如Velocity，FreeMarker，Smarty等等。一个模板技术百家争鸣的时代到了。
		</p>
		<h3>天得一以清，地得一以宁</h3>
		<p>然而，这些模板技术只是简化了后端开发的工作，却把前端开发遗忘在原始社会。</p>
		<p>随着浏览器功能的逐渐强大，越来越多的逻辑在前端发生。这就是所谓的Ajax时代。</p>
		<p>
			Ajax提出一个概念，拼凑了一些现有的技术。却没有真正去提出任何解决问题的模式。
			他只是把我们前端程序带入一个更加混乱的场景，如同前面提到的CGI时代一样。
		</p>
		<p>我们局部刷新着UI，随时改动着当前的页面的结构，却没有一个真正适合做这种工作的实用技术。</p>
		<p>
			随着这种运用场景的逐渐丰富，一些前端模板的思想开始活跃起来，这就包括JST，Lite，Google Clourse
			Template。

		</p>

	</body>
</html>
