<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:fk="http://firekylin.my.baidu.com/ns/doc" xml:lang="zh-CN"
	dir="ltr">
	<head>
		<title>模板编程思想介绍</title>
	</head>
	<body>
		<h3>面向原始数据编程</h3>
		<p>很多人一说到前端编程，第一印象就是脏累繁。</p>
		<p>只是为什么呢？浏览器的问题这里暂且不论。提一点您可能没有重视的：您可能选错了编程对象。</p>
		<p>错在哪里？很多时候，我们都把当前网页的文档结构模型（DOM）当作编程的对象，前端代码就是在不断反复的折腾这些DOM节点。</p>
		<p>可是还有什么别的办法吗？当能:</p>
		<p>文档对象模型一般都是一种被生成的数据，如果我们能找到生成他的数据的原始数据，直接修改原始数据，可能一切就会更加简单。</p>
		<p>我们前端编程还处在混沌的状态。</p>
		<p>数据和逻辑混杂其中，我们编程的时候，很多时候我们都把dom对象看作我们的数据模型，总是不断的修改这些繁琐的dom对象。</p>
		<p>其实这中做法并不一定是错的，但不要一叶障目。有些时候，换一种思维，就会有另外一片天地。</p>
		<p>问题就在dom对象是否总是适合做数据模型？以前的网页都很简单，我们基本没有抽象数据模型的必要。但是随着程序逻辑的不断复杂化。dom节点作为数据模型，就显得有点臃肿了。很明显，他不够抽象，有了太多显示的细节。</p>
		<p>数据模型的代码，和其他js逻辑代码混杂其中</p>
		<p>要点...</p>
		<p>以数据为中心：去繁就简,返朴归真。</p>
		<p>大乱需大治：表现层没有上下文，一切修改从源头出发。</p>
		<h3>MVC 模式本质</h3>
		<p>
			MVC的本质不是分 MVC的初衷并不是分工合作 分不是目标，不合理的分法更容易导致沟通成本的上升

		</p>
		<h3>前端模板</h3>
		<p>这确实是目前前端编程的现状，因为前端编程还处在一个混沌的时期。</p>
		<p>前端的业务和展示混杂在一起，浑浑沌沌，暗无天日。</p>
		<p>好了，这就是我们要解决的问题，不要在显示层面编程，要对数据编程。</p>
		<p>....</p>
	</body>
</html>
