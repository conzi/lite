<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://www.xidea.org/lite/core"
	xmlns:h="http://www.xidea.org/lite/html-ext"
	xmlns:x="http://www.xidea.org/lite/example" h:trim="true">
	<head>
		<c:include path="$page" xpath="//xhtml:head/*" />
		<meta http-equiv="content-type" content="text/html; charset=utf-8" />
		<link href="default.css" rel="stylesheet" type="text/css" />
		<link href="../codemirror/codemirror.css" rel="stylesheet" type="text/css" />
		<link href="../codemirror/default.css" rel="stylesheet" type="text/css" />
		<script src="../codemirror/codemirror.js" />
		<script src="../codemirror/overlay.js" />
		<script src="../codemirror/javascript.js" />
		<script src="../codemirror/xml.js" />
		<c:extension namespace="http://www.w3.org/1999/xhtml">
			//<![CDATA[
	var PATH_KEY = "http://www.xidea.org/lite/doc/guide/layout.xhtml#currentPathh";
    function parseA(node){//连接简写，没有文本的时候，直接使用href作为文本节点
    	var href = node.getAttribute('href');
    	if(href && node.firstChild == null){
    		node.appendChild(node.ownerDocument.createTextNode(href));
    	}
    	if(/\.xhtml/.test(href)){
    		var uri = this.createURI(href);
    		var root = this.config && this.config.root;
    		var styleClass = node.getAttribute('class')||'';
    		var file = root && new java.io.File(new java.io.File(root),uri.path);
    		try{
    			var path = this.getAttribute(PATH_KEY);
    			if(!path){
    				var paths = this.getResources();
    				for(var i =0;i<paths.length;i++){
    					var path = paths[i];
    					if(/\.xhtml$/.test(path+'')){
    						break;
    					}
    				}
    				this.setAttribute(PATH_KEY,path);
    			}
    			//$log.error(path+'',uri+'');
    			if((path+'').replace(/#.*|([\/])+/g,'$1') === (uri+'').replace(/#.*|([\/])+/g,'$1')){
    				styleClass += ' current'
    			}else{
    				//$log.error((path+'').replace(/#.*|([\/])+/g,'$1'),(uri+'').replace(/#.*|([\/])+/g,'$1'));
    				if(root && uri.scheme == 'lite' && !file.exists()){
    					styleClass += ' missed';
    				}
    			}
    		}finally{
    			if(styleClass){
	    			node.setAttribute('class',styleClass);
	    		}
	    	}
    	}
    	this.next(node);
    }
    //]]>
		</c:extension>
		<c:extension namespace="http://www.xidea.org/lite/example">
			//<![CDATA[
var style = 'border: 1px solid #DFECF1;'
    			+'font-family:"Courier New",monospace;'
    			+'padding:4px;margin:4px;'
    			+'font-size:12px;overflow:auto;'
    			+'background-color:#EEE;border:1px solid #222;';
function parseCode(node){
    //代码高亮组件
    var ts = [];
    var text = String(node.textContent || node.text);
    text = text.replace(/^\s*[\r\n]+|[\r\n]+\s*$/g,'');
    text = text.split(/\r\n?|\n/);
    var len = text.length;
    text = text.join('\n');
    while(true){
    	var text2 = text.replace(/^[\t ]/mg,'');
    	if(text.length - text2.length != len){
    		break;
    	}
    	text = text2;
    }
	function encodeString(a){
		return (0x10000 + a.charCodeAt()).toString(16).replace('1','\\u')
	}
	
	text = text.replace(/[\\"'\r\n<]/g,encodeString)
	text = '"'+text+'"';
	var varName = node.getAttribute("var");
	var path = node.getAttribute("path");
	var model = node.getAttribute("model");
	if(model){
		if(/^\s*\{/.test(model)){
			model = '"'+model.replace(/[\\"'\r\n<]/g,encodeString)+'"'
		}
	}else{
		model='';
	}
	if(varName){
		this.append("<script>" + varName+'=' +text+";<\/script>")
		if(model){
			this.append("<span class='runner' onclick='showExample("+model+','+varName+")'>执行</span>");
		}
	}else{
		this.append("<div class='code'><script>renderSource("+text+','+(model||null)+",'"+path+"');<\/script></div>")
	}
};
function parseNL2BR(node){
	var text = String(node.textContent || node.text);
	var varId = this.allocateId();
	//生成内容
	this.appendCapture(varId)
	//以不编码的方式捕捉内容
	var list = this.parseText(text,0);
	this.appendAll(list);
	this.appendEnd();
	
	//将生成内容按行劈成数组，循环安全输出
	var forId = this.allocateId();
	this.appendFor(forId,varId+".split('\\n')",null);
	this.appendXT(forId);
	this.append("<br/>");
	this.appendEnd();
}
//]]>
		</c:extension>
		<style>
			.cm-lite-el{ color:#d30;}
			.cm-lite-tag{
			color:#9933FF;font-weight:bold;}
		</style>
		<script>
			//<![CDATA[
var xmlSourceMap = {};
		
		CodeMirror.defineMode("litexml", function(config, parserConfig) {
		  var litexmlOverlay = {
		    token: function(stream, state) {
		      if (stream.match("c:")) {
		        while ((ch = stream.next()) != null)
		          if (!/\w/.test(ch)) break;
		        return "lite-tag";
		      }else if (stream.match(/^(?:\$\!?\{)/)) {
		        while ((ch = stream.next()) != null)
		          if (ch == "}") break;
		        return "lite-el";
		      }
		      while (stream.next() != null && !stream.match(/^\$\!?\{/, false)) {}
		      return null;
		    }
		  };
		  return CodeMirror.overlayParser(CodeMirror.getMode(config, parserConfig.backdrop || "xml"), litexmlOverlay);
		});
		var mirrors = [];
		var jsons = [];
		function placeMirror(node){
			var s = document.getElementsByTagName('script');
			var s = s[s.length-1];
			s.parentNode.appendChild(node);
		}
		function renderSource(text,json,path){
			if(json){
				document.write("<div class='runner' onclick='showExample(jsons["+jsons.length+"],mirrors["+mirrors.length+"].getValue())'>执行</div>");
				jsons.push(json);
			}
			var mirror =  CodeMirror(placeMirror, {
  				value: text,
  				//readOnly :true,
  				mode:  {name:/^\s*</.test(text)?"litexml":"javascript",json:true}
			});
			mirrors.push(mirror);
			if(path){
				xmlSourceMap[path] = mirror;
			}
			return mirror;
		}
		function updateMirror(){
			var i= mirrors.length;
			while(i--){
				mirrors[i].refresh();
			}
		}
		function showNext(thiz,n,show,hide){
			while(n = n.nextSibling){
				if(n.nodeType == 1){
					if(n.style.display=='none'){
						n.style.display = 'block';
						thiz.innerHTML = hide;
						updateMirror();
					}else{
						n.style.display = 'none';
						thiz.innerHTML = show;
					}
					break;
				}
			}
		}
		//]]>
		</script>
	</head>
	<body>
		<div id="main">
			<div id="header">
				<div class="logo" onclick="location = 'index.xhtml'">
					<c:for var="item"
						list="${
  [
    [0,0,19,100],
    [0,81,42,19],
    [23,0,19,19],
    [23,23,19,54],
    [46,0,42,19],
    [46,23,19,77],
    [69,81,19,19]
  ]
  }">
						<div
							style='left:${item[0]}px;top:${item[1]}px;width:${item[2]}px;height:${item[3]}px;'>&#160;</div>
					</c:for>
				</div>
				<h1>
					<c:include path="$page" xpath="//xhtml:title/text()" />
				</h1>
				<div class="line" />
			</div>
			<div id="content">
				<c:include path="$page" xpath="//xhtml:body/node()" />
				<div id="post">
					<fieldset>
						<legend>留言区</legend>
						<a name="messages" />
						<div id="messages" />
						<c:def name="formatTime(date)">
							<c:date-format pattern="YYYY-MM-DDThh:mm" value="${date}"/>
						</c:def>
						<c:client name="renderMessage(messages)">
							<c:for var="message" list="${messages}">
								<div class="message-${for.index%2}">
									<div title="mail to:${message.email.replace('@','?')}">@${message.username} : ${formatTime(message.postTime)}</div>
									<div>
										<x:nl2br>${message.content}</x:nl2br>
									</div>
								</div>
							</c:for>
						</c:client>
						<!-- 禁止IE用户 -->
						<div>
							<form method="POST"
								onsubmit="return commitMessage(this.username.value,this.email.value,this.content.value) || this.reset() || false">
								<label>大名:<input name="username" required="required" /></label>
								<label>email:<input name="email" type="email" /></label>
								<br/>
								<div>
									<textarea name="content" required="required"
										minlength="30"></textarea>
								</div>
								<div>
									<input type="submit" value="发表留言">
								</div>
							</form>
						</div>
						<script>
							//<![CDATA[
						if(window.ActiveXObject){
							alert("不建议使用IE浏览器查看文档");
							document.body.style.filter="alpha(opacity=50)";
						}
						var messageContainer = document.getElementById('messages');
						var messageData = ${messages}||[];
						messageContainer.innerHTML = renderMessage(messageData);
						function commitMessage(username,email,content){
							try{
								var item = {username:username,email:email,content:content,postTime:+new Date()};
								messageData.push(item);
								messageContainer.innerHTML = renderMessage(messageData);
								var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('MSXML2.XMLHTTP');
								function messagePosted(){
									
								}
								xhr.onreadystatechange = messagePosted;
								var href = window.location.href;
								href=href.replace(/\/doc\/guide\/(?:index\.php\/)/,'/doc/guide/index.php/')
								xhr.open("POST",href,true);
								var data = 'username='+encodeURIComponent(username)+
										'&email='+encodeURIComponent(email)+
										'&content='+encodeURIComponent(content);
								//xhr.setRequestHeader('Connection','close');
								xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');
								xhr.setRequestHeader('Accept','text/javascript, */*');
								xhr.send(data);
							}catch(e){
								alert(e)
							}
							return false;
						}
						//]]>
						</script>
					</fieldset>
				</div>
			</div>
			<div id="footer"></div>
		</div>
		<c:include path="menu.xhtml" />
		<div class="dialog">
			<div class="mask" />
			<div id="exampleRunner">
				<div class="head">
					===模板测试 ===
					<a class="close" onclick="closeExample()">X</a>
				</div>
				<div class="jsonSource">
					<h5>数据模型</h5>
					<script>
						var jsonEditor = CodeMirror(placeMirror, {
						value: '',
						lineNumbers: true,
						mode: {name:"javascript",json:true}
						});
					</script>
				</div>
				<div class="templateSource">
					<h5>模板代码</h5>
					<script>//<![CDATA[
		var templateEditor = CodeMirror(placeMirror, {
			value: '',
			lineNumbers: true,
			mode: {name:"litexml"}
		});
					//]]>
					</script>
				</div>
				<div class="resultSource" id="exampleResult">
					<h5>结果输出</h5>
					<div id="resultLoader"/>
					<div id="resultSource">
					<script>//<![CDATA[
		var resultEditor = CodeMirror(placeMirror, {
			value: '',
			readOnly:true,
			lineNumbers: true,
			mode: {name:"litexml"}
		});
		
		var exampleRunner = document.getElementById("exampleRunner");
		var exampleResult = document.getElementById("exampleResult");
			
		function closeExample(){
			exampleRunner.parentNode.style.display = 'none';
		}	
		function showExample(json,template){
			exampleRunner.parentNode.style.display = 'block';
			exampleResult.style.display = 'none';
			if(typeof json != 'string'){
				json = JSON.stringify(json);
			}
			jsonEditor.setValue(json);
			templateEditor.setValue(template);
			var runButton = document.getElementById("runButton");
			runButton.disabled=true;
		}
		function buildContext(){
			var context = new ParseContext();
			var cached = {};
			for(var path in xmlSourceMap){
				cached[path] = xmlSourceMap[path].getValue();
			}
			cached["/source.xhtml"] = templateEditor.getValue();
			var baseXMLLoader = context.loadXML;
			context.loadXML = function(uri){
				if(uri.path){
					if(uri.path in cached){
						uri = cached[uri.path];
					}else{
						$log.warn("未知文件路径",uri.path)
					}
				}
				return baseXMLLoader.call(context,uri);
			}
			context.parse(context.createURI('/source.xhtml'));
			return context;
		}
		function compileToJS(){
			try{
				var context = buildContext();
				var litecode = context.toList();
				var translator = new JSTranslator();//'.','/','-','!','%'
				translator.liteImpl = 'lite__impl_';//avoid inline jslib 
				var jscode = translator.translate(litecode);
			}catch(e){
				$log.error("测试失败：模板编译异常：",e);
				return;
			}
			showResult(jscode);
			updateResultRunner('js',litecode,jscode);
		}
		function compileToPHP(){
			try{
				var context = buildContext();
				var litecode = context.toList();
				var pt = new PHPTranslator("/test.xhtml".replace(/[\/\-\$\.!%]/g,'_'));//'.','/','-','!','%'
				var phpcode = pt.translate(litecode);
			}catch(e){
				$log.error("测试失败：模板编译异常：",e);
				return;
			}
			showResult(phpcode);
			updateResultRunner('php',litecode,phpcode);
		}
		function compileToLite(){
			try{
				var context = buildContext();
				var litecode = context.toList();
				var litecode = stringifyJSON(litecode);
			}catch(e){
				$log.error("测试失败：模板编译异常：",e);
				return;
			}
			showResult(litecode);
			updateResultRunner('java',litecode,null);
		}
		function updateResultRunner(type,litecode,runcode){
			runStatus = {type:type,litecode:litecode,runcode:runcode}
			var runButton = document.getElementById("runButton");
			runButton.disabled=false
			runButton.value="运行("+type+")"
		}
		var runStatus = {}
		function runTemplate(){
			try{
				var js = jsonEditor.getValue();
				var data = window.eval('('+js+')');
			}catch(e){
				$log.error("测试失败：模拟数据异常："+e);
				return;
			}

			if(runStatus.type == 'js'){
				try{
					var code = runStatus.runcode;
					code = code.replace(/^function\(\$\_context\)/m,"return $&");
					//alert(code)
					var tpl =  window.eval("(function(lite__impl_def,lite__impl_get){"+(code||null)+"})");
					tpl = new Template(tpl);
					var result = tpl.render(data);
				}catch(e){
					$log.error("测试失败：模板运行异常："+tpl.render+e);
					return;
				}
				showResult(result);
			}else {
				var loader = document.getElementById('resultLoader');
				loader.style.display = 'block';
				try{
					if(runStatus.type == 'php'){
						var code = runStatus.runcode+'\nlite_template_test_xhtml(json_decode('+stringifyJSON(stringifyJSON(data))+',true));'
						var url = 'http://litetest.sinaapp.com/?php='+encodeURIComponent(code)+'&t='+ +new Date();
						loader.innerHTML = '<h2>load php result ....</h2><p>php 预览环境由新浪appengine提供。<a href="'+url+'">手动预览</a></p>';
					
					}else{
						var code = runStatus.litecode;
						var model = stringifyJSON(data);
						var url = 'http://www.xidea.org:1981/lite/doc/runner.jsp?code='
							+encodeURIComponent(code)+'&model='
							+encodeURIComponent(model)+'&'+ +new Date();
						loader.innerHTML = '<h2>load java result ....</h2><p>java 预览环境由满江红开源组织提供。<a href="'+url+'">手动预览</a></p>';
					}
				}catch(e){
				}
				var s = document.createElement('script');
				s.src = url +'&callback=showResult'
				loader.appendChild(s);
			}
		}
		function showResult(result){
			var resultSource = document.getElementById('resultSource');
			exampleResult.style.display = 'block';
			resultEditor.setValue(result);
			var n = 0;
			var i = setInterval(function a(){
				resultSource.style.opacity = n/10;
				if(n++>10){
					document.getElementById('resultLoader').style.display = 'none'
					resultSource.style.opacity = 1;
					clearInterval(i);
				}
			},100)
		}
		//]]>
					</script>
					</div>
				</div>
				<div class="toolbar">
					<input type="button" value="编译(JS)" onclick="compileToJS()" />
					<input type="button" value="编译(PHP)" onclick="compileToPHP()" />
					<input type="button" title="lite" value="编译(Java)" onclick="compileToLite()" />
					<input type="button" id="runButton" disabled value="运行(?)" onclick="runTemplate()" />
				</div>
			</div>
		</div>
		
		<script src="../boot.js" />
		<!--  
		<script src="/scripts/boot.js"/>
		-->
		<script>
			if(!this.ParseContext && this.$import){
				$import('org.xidea.lite.web:*',true);
				$import('org.xidea.jsi:$log',true);
				$import('org.xidea.lite:Template',true);
				$import('org.xidea.lite.impl.js:*',true);
				$import('org.xidea.lite.impl.php:*',true);
				$import('org.xidea.lite.parse:*',true);
				$import('org.xidea.lite.util:stringifyJSON',true);
			}
			</script>
		<script>
			var menu = document.getElementById('menu');
			var menuContent = menu.firstChild;
			menuContent = menuContent.nodeType==1 ?menuContent:menuContent.nextSibling;
			var as = document.body.getElementsByTagName('a');
			var height = menu.scrollHeight;
			for(var i = as.length;i--;){
				var a = as.item(i);
				if(/\bcurrent\b/.test(a.className)){
					var t= a.offsetTop;
					var bt = height - t;
					//alert([height,t,bt])
					if(bt<120){
						menuContent.scrollTop = -bt+Math.min(150,height/3)+15
					}
					//a.parentNode.scrollIntoView();
				} 
			}
		</script>
	</body>
</html>
