<?xml version="1.0" encoding="UTF-8"?>
<project name="Lite" default="build" basedir="../">
	<tstamp>
		<format property="version" pattern="yyyyMMdd" />
	</tstamp>
	<available file="../JSA/build/dest/JSide.jar" property="JSAPath" value="web/WEB-INF/lib/JSI.jar;web/WEB-INF/classes;../JSA/build/dest/JSide.jar;" />

	<target name="init">
		<delete dir="build/dest/jslite" />
		<delete dir="build/dest/release" />
		<mkdir dir="build/dest/jslite" />
		<mkdir dir="build/dest/nodelite" />
		<mkdir dir="build/dest/release" />
		<mkdir dir="build/dest/jslite/el" />
		<mkdir dir="build/dest/jslite/lite" />
		<mkdir dir="build/dest/jslite/lite/impl" />
		<mkdir dir="build/dest/jslite/lite/parse" />
		<mkdir dir="build/dest/jslite/lite/util" />
		<mkdir dir="build/dest" />
	</target>
	<target name="compilelite">
		<delete dir="build/dest/temp" />
		<mkdir dir="build/dest/temp" />
		<copy todir="build/dest/temp">
			<fileset dir="web">
				<include name="**/*.xhtml" />
				<include name="WEB-INF/decorators.xml" />
				<exclude name="WEB-INF/litecode/*.*" />
				<exclude name="WEB-INF/htmlcode/**/*.*" />
			</fileset>
		</copy>
		<java classname="org.xidea.lite.tools.LiteCompiler" classpath="web/WEB-INF/lib/js.jar;web/WEB-INF/lib/JSI.jar;web/WEB-INF/lib/commons-logging-1.0.4.jar;web/WEB-INF/classes">
			<arg value="-webRoot" />
			<arg value="${basedir}/build/dest/temp" />
			<arg value="-litecached" />
			<arg value="${basedir}/web/WEB-INF/litecode" />
		</java>
		<delete dir="build/dest/temp" />
	</target>

	<target name="packageOptimize">
		<java classname="org.jside.jsi.tools.web.PackageAction" classpath="${JSAPath}">
			<arg value="-scriptBase" />
			<arg value="${basedir}/web/scripts" />
			<arg value="-output" />
			<arg value="${basedir}/build/dest/package-gen.js" />

			<arg value="-packageName" />
			<arg value="org.xidea.lite" />

			<arg value="-dependences" />
			<arg value="org.xidea.jsidoc.util" />
		</java>
	</target>
	<target name="compile">
		<copy todir="web/WEB-INF/classes">
			<fileset dir="src/main">
				<include name="**/*.*" />
				<exclude name="**/script/**" />
			</fileset>
			<fileset dir="web/scripts">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="src/test">
				<include name="org/xidea/el/test/*.*" />
				<include name="org/xidea/lite/test/*.*" />
			</fileset>
			<fileset dir="src/php">
				<include name="lite/**/*.*" />
			</fileset>
		</copy>
		<javac srcdir="web/WEB-INF/classes" fork="true" target="1.5" debug="true" destdir="web/WEB-INF/classes" encoding="UTF-8">
			<classpath>
				<fileset dir="web/WEB-INF/lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="package" depends="init,compress,compile">
		<delete>
			<fileset dir="build/dest/">
				<include name="Example-*.zip" />
				<include name="Lite-*.jar" />
				<include name="JSEL-*.jar" />
				<include name="LiteR*.jar" />
			</fileset>
		</delete>
		<echo file="build/dest/jslite/el/__package__.js">this.setImplementation("org.xidea.lite.impl")</echo>
		<echo file="build/dest/jslite/lite/parse/__package__.js">this.setImplementation("org.xidea.lite.impl")</echo>

		<jar destfile="build/dest/JSEL.jar" compress="true">
			<fileset dir="web/WEB-INF/classes">
				<include name="org/xidea/el/**/*.class" />
				<exclude name="**/*.js" />
				<exclude name="**/test/**/*.*" />
			</fileset>
		</jar>
		<jar destfile="build/dest/Lite.jar" compress="true">
			<manifest>
				<attribute name="Main-Class" value="org.xidea.lite.tools.LiteCompiler" />
			</manifest>
			<fileset dir="web/scripts">
				<include name="org/xidea/**/*.js" />
				<exclude name="**/nodelite/*.*" />
			</fileset>
			<fileset dir="src/php/">
				<include name="lite/*.*" />
			</fileset>
			<fileset dir="web/WEB-INF/classes">
				<include name="org/xidea/el/**/*.class" />
				<include name="org/xidea/lite/**/*.class" />
				<include name="org/xidea/lite/impl/dtd/*.ent" />
				<include name="org/xidea/lite/impl/dtd/xhtml1.dtd" />
				<exclude name="**/test/**/*.*" />
			</fileset>
			<fileset dir="src/main/">
				<include name="org/xidea/lite/tools/internal/*.js" />
				<include name="org/xidea/**/*.java" />
				<exclude name="org/xidea/**/test/**.java" />
				<exclude name="org/xidea/**/*Test*.java" />
			</fileset>

			<!--
			<zipfileset prefix="org/xidea/" dir="build/dest/jslite/">
				<include name="*/**/*.js" />
			</zipfileset>
			-->
			<zipgroupfileset dir="web/WEB-INF/lib/">
				<include name="commons-logging*.jar" />
				<include name="JSI*.jar" />
				<include name="js.jar" />
			</zipgroupfileset>
		</jar>
		<jar destfile="build/dest/LiteRT.jar" compress="true">
			<fileset dir="web/WEB-INF/classes">
				<include name="org/xidea/lite/*.class" />
			</fileset>
			<zipfileset src="build/dest/JSEL.jar">
				<include name="org/xidea/**/*.*" />
			</zipfileset>
		</jar>
		<delete file="build/dest/jslite/__package__.js" />
		<copy tofile="build/dest/JSEL-${version}.jar" file="build/dest/JSEL.jar" />
		<copy tofile="build/dest/Lite-${version}.jar" file="build/dest/Lite.jar" />
		<copy tofile="build/dest/LiteRT-${version}.jar" file="build/dest/LiteRT.jar" />

	</target>
	<target name="test">
		<java failonerror="true" classname="org.jside.jsi.tools.export.ExportAction" classpath="${JSAPath}">
			<arg value="-scriptBase" />
			<arg value="${basedir}/web/scripts" />
			<arg value="-config.ascii" />
			<arg value="false" />
			<arg value="-config.features" />
			<arg value="org.xidea.lite:Compile" />
			<arg value="org.xidea.jsi.boot:$log" />

			<arg value="-exports" />
			<arg value="org.xidea.el:*" />
			<arg value="org.xidea.lite:*" />
			<arg value="org.xidea.lite.impl:*" />
			<arg value="org.xidea.lite.parse:*" />

			<arg value="-outputExported" />
			<arg value="${basedir}/build/dest/jslite/template.js" />
		</java>
	</target>

	<target name="compress" depends="init">
		<echo>压缩PHP目标代码 JS编译程序</echo>
		<java fork="true" classname="org.jside.jsi.tools.export.ExportAction" classpath="${JSAPath}">
			<arg value="-scriptBase" />
			<arg value="${basedir}/web/scripts" />
			<arg value="-internalPrefix" />
			<arg value="lite$" />
			<arg value="-config.features" />
			<arg value=":Debug" />
			<arg value="-exports" />
			<arg value="org.xidea.jsi:$log" />
			<arg value="org.xidea.lite:Template" />
			<arg value="org.xidea.lite.web:WebCompiler" />
			<arg value="org.xidea.lite.parse:*" />
			<arg value="org.xidea.lite.impl.js:*" />
			<arg value="org.xidea.lite.impl.php:*" />
			<arg value="org.xidea.lite.util:*" />
			<arg value="org.xidea.lite.web:*" />
			<arg value="-outputExported" />
			<arg value="${basedir}/build/dest/boot.js" />
		</java>

		<echo>导出数据展示(DataView) JS程序</echo>
		<java fork="true" failonerror="true" classname="org.jside.jsi.tools.export.ExportAction" classpath="${JSAPath}">
			<arg value="-scriptBase" />
			<arg value="${basedir}/web/scripts" />
			<arg value="-internalPrefix" />
			<arg value="dataView$" />
			<arg value="-exports" />
			<arg value="org.xidea.lite.web:DataView" />
			<arg value="-outputExported" />
			<arg value="${basedir}/build/dest/data-view.js" />
		</java>
	</target>
	<target name="nodelite" depends="init">
		<echo>导出NodeJS版本</echo>
		<java fork="true" failonerror="true" classname="org.jside.jsi.tools.export.ExportAction" classpath="${JSAPath}">
			<arg value="-scriptBase" />
			<arg value="${basedir}/web/scripts" />
			<arg value="-exports" />
			<arg value="org.xidea.lite.nodejs:DOMParser" />
			<arg value="org.xidea.lite.nodejs:XPathEvaluator" />
			<arg value="org.xidea.lite.nodejs:LiteCompiler" />
			<arg value="-outputExported" />
			<arg value="${basedir}/build/dest/nodelite/lite-compiler1.js" />
		</java>
		<echo file="${basedir}/build/dest/nodelite/lite-compiler0.js">this.eval =function(){return eval(arguments[0])};var window = this;var $JSI = {impl:{log:console.info}};exports.LiteCompiler = LiteCompiler;</echo>
		<concat destfile="${basedir}/build/dest/nodelite/lite-compiler.js">
			<filelist>
				<file name="${basedir}/build/dest/nodelite/lite-compiler0.js"/>
				<file name="${basedir}/build/dest/nodelite/lite-compiler1.js"/>
			</filelist>
		</concat>
		<delete  file="${basedir}/build/dest/nodelite/lite-compiler0.js"/>
		<delete  file="${basedir}/build/dest/nodelite/lite-compiler1.js"/>
		<copy todir="${basedir}/build/dest/nodelite/">
			<fileset dir="${basedir}/web/scripts/org/xidea/lite/nodejs">
				<include name="lite-engine.js"/>
				<include name="lite-setup.js"/>
			</fileset>
		</copy>
		<echo>打包NodeJS脚本</echo>
		<tar destfile="build/dest/nodelite.tgz" compression="gzip">
			<tarfileset prefix="package/" dir="build/dest/nodelite">
				<include name="*.js" />
			</tarfileset>
			<tarfileset prefix="package/" dir="web/WEB-INF/">
				<include name="node-test.js" />
			</tarfileset>
			<tarfileset prefix="package/" dir="web/scripts/">
				<include name="package.json" />
			</tarfileset>
		</tar>
	</target>
	<target name="nodelite-source">
		<tar destfile="build/dest/nodelite-source.tgz" compression="gzip">
			<tarfileset prefix="package/" dir="web/scripts/">
				<include name="package.json" />
				<include name="**/*.js" />
			</tarfileset>
		</tar>
	</target>
	<target name="compressImpl">
		<echo>压缩JSLite实现</echo>
		<!-- export lite -->
		<!-- empty -->
		<!-- export lite impl,parse,el -->
		<java fork="true" failonerror="true" classname="org.jside.jsi.tools.export.ExportAction" classpath="${JSAPath}">
			<arg value="-scriptBase" />
			<arg value="${basedir}/web/scripts" />
			<arg value="-internalPrefix" />
			<arg value="liteImpl$" />
			<arg value="-exports" />
			<arg value="org.xidea.el:*" />
			<arg value="org.xidea.lite.impl:*" />
			<arg value="org.xidea.lite.parse:*" />
			<!--
			<arg value="-bootCached"/>
			<arg value="org.xidea.lite.util:*" />
			<arg value="org.xidea.jsi:*" />
			-->
			<arg value="-outputPackage" />
			<arg value="${basedir}/build/dest/jslite/lite/impl/__package__.js" />
			<arg value="-outputExported" />
			<arg value="${basedir}/build/dest/jslite/lite/impl/impl.js" />
		</java>

		<!-- export lite util -->
		<java fork="true" failonerror="true" classname="org.jside.jsi.tools.export.ExportAction" classpath="${JSAPath}">
			<arg value="-scriptBase" />
			<arg value="${basedir}/web/scripts" />
			<arg value="-exports" />
			<arg value="org.xidea.lite.util:*" />
			<!--
			<arg value="-bootCached"/>
			<arg value="org.xidea.lite.util:*" />
			-->
			<arg value="-outputPackage" />
			<arg value="${basedir}/build/dest/jslite/lite/util/__package__.js" />
			<arg value="-outputExported" />
			<arg value="${basedir}/build/dest/jslite/lite/util/impl.js" />
		</java>
	</target>
	<target name="compressWrap" depends="init">
		<echo>导出 浏览器JS 库</echo>
		<java fork="true" failonerror="true" classname="org.jside.jsi.tools.export.ExportAction" classpath="${JSAPath}">
			<arg value="-scriptBase" />
			<arg value="${basedir}/web/scripts" />
			<arg value="-exports" />
			<arg value="org.xidea.lite.*" />
			<arg value="-internalPrefix" />
			<arg value="lite$" />
			<arg value="-outputExported" />
			<arg value="${basedir}/build/dest/release/template.js" />
		</java>
		<java fork="true" failonerror="true" classname="org.jside.jsi.tools.export.ExportAction" classpath="${JSAPath}">
			<arg value="-scriptBase" />
			<arg value="${basedir}/web/scripts" />
			<arg value="-exports" />
			<arg value="org.xidea.lite.impl.js.liteWrapImpl" />
			<arg value="-internalPrefix" />
			<arg value="liteWrapImpl$" />
			<arg value="-outputExported" />
			<arg value="${basedir}/build/dest/release/lite-wrap-impl.js" />
			<arg value="-bootCached"/>
			<arg value="org.xidea.lite.*" />
		</java>
	</target>
	<target name="build" depends="compress,package,php-example">
		<copy tofile="../TT/web/WEB-INF/lib/Lite-${version}.jar" file="build/dest/Lite.jar" />
	</target>
	<target name="publish" depends="build,compressWrap,nodelite">
		<available file="${basedir}/build/dest/" property="webdest" value="${basedir}/build/dest/web" />
		<available file="../../xidea/lite" property="webdest" value="../../xidea/lite/" />

		<echo>liteWrap发布到 ${webdest}</echo>
		<copy todir="${webdest}">
			<fileset dir="build/dest/">
				<include name="release/*.js" />
			</fileset>
		</copy>
		<echo>nodelite-${version}.tar发布到 ${webdest}/release</echo>
		<copy tofile="${webdest}/release/nodelite-${version}.tgz"
			file="build/dest/nodelite.tgz"/>
		<echo>编译模板</echo>
		<java jar="build/dest/Lite.jar" fork="true">
			<arg value="-root" />
			<arg value="web" />
			<arg value="-translator" />
			<arg value="php" />
			<arg value="-output" />
			<arg value="${webdest}" />
			<arg value="-includes" />
			<arg value="/doc/guide/**" />
			<arg value="/doc/test.xhtml" />
		</java>
		<echo>发布测试数据</echo>
		<mkdir dir="${webdest}/doc/test-data" />
		<java classname="org.xidea.el.test.AutoELTest" classpath="web/WEB-INF/classes;web/WEB-INF/lib/junit.jar;build/dest/Lite.jar" fork="true">
			<arg value="${webdest}" />
		</java>
		<java classname="org.xidea.lite.test.AutoSyntaxTest" classpath="web/WEB-INF/classes;web/WEB-INF/lib/junit.jar;build/dest/Lite.jar" fork="true">
			<arg value="${webdest}" />
		</java>
		<java classname="org.xidea.lite.test.DocumentExampleTest" classpath="web/WEB-INF/classes;web/WEB-INF/lib/junit.jar;build/dest/Lite.jar" fork="true">
			<arg value="${webdest}" />
		</java>
	</target>

	<target name="php-example" depends="compress">
		<delete>
			<fileset dir="build/dest/">
				<include name="php-example-*.zip" />
			</fileset>
		</delete>
		<zip comment="前端编译" file="build/dest/php-example-${version}.zip" encoding="GBK">
			<fileset dir="web">
				<include name="lite-service.php" />
				<include name="example/test.php" />
				<include name="example/test.xhtml" />
			</fileset>
			<zipfileset dir="src/php" prefix="WEB-INF/classes/">
				<include name="lite/*.php" />
			</zipfileset>
			<zipfileset dir="build/dest/" prefix="WEB-INF/classes/lite/">
				<include name="boot.js" />
				<include name="data-view.js" />
			</zipfileset>
		</zip>
	</target>
	<target name="javadoc">
		<javadoc charset="UTF-8" docencoding="UTF-8" encoding="UTF-8" sourcepath="src/main" destdir="web/doc/api/2_0" linksource="true">
			<fileset dir="src/main">
				<include name="**.java" />
			</fileset>
			<classpath>
				<fileset dir="web/WEB-INF/lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javadoc>
		<replace dir="web/doc/api/2_0/src-html" includes="**/*.html" token="&lt;HTML>" value='&lt;HTML>&lt;META http-equiv="Content-Type" content="text/html; charset=UTF-8">'>
		</replace>
	</target>

	<target name="static">
		<java classname="org.xidea.lite.tools.LiteCompiler" classpath="web/WEB-INF/classes;web/WEB-INF/lib/commons-logging-1.0.4.jar;web/WEB-INF/lib/js.jar;web/WEB-INF/lib/JSI.jar">
			<arg value="-webRoot" />
			<arg value="${basedir}/web/" />

			<arg value="-htmlcached" />
			<arg value="${basedir}/web/WEB-INF/htmlcached" />

		</java>
	</target>
</project>