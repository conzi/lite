<div class="dialog">
	<div class="mask" />
	<div id="exampleRunner">
		<div class="head">
			===模板测试 ===
			<a class="close" onclick="closeExample()">X</a>
		</div>
		<div class="jsonSource">
			<h5>数据模型</h5>
			<script>
				var jsonEditor = CodeMirror(placeMirror, {
				value: '',
				lineNumbers: true,
				mode: {name:"javascript",json:true}
				});
					</script>
		</div>
		<div class="templateSource">
			<h5>模板代码</h5>
			<script>//<![CDATA[
		var templateEditor = CodeMirror(placeMirror, {
			value: '',
			lineNumbers: true,
			mode: {name:"litexml"}
		});
					//]]>
			</script>
		</div>
		<div class="resultSource" id="exampleResult">
			<h5>结果输出</h5>
			<div id="resultLoader" />
			<div id="resultSource">
				<script>//<![CDATA[
		var resultEditor = CodeMirror(placeMirror, {
			value: '',
			readOnly:true,
			lineNumbers: true,
			mode: {name:"litexml"}
		});
		
		var exampleRunner = document.getElementById("exampleRunner");
		var exampleResult = document.getElementById("exampleResult");
			
		function closeExample(){
			exampleRunner.parentNode.style.display = 'none';
		}	
		function showExample(json,template){
			exampleRunner.parentNode.style.display = 'block';
			exampleResult.style.display = 'none';
			if(typeof json != 'string'){
				json = JSON.stringify(json);
			}
			jsonEditor.setValue(json);
			templateEditor.setValue(template);
			var runButton = document.getElementById("runButton");
			runButton.disabled=true;
		}
		function buildContext(){
			var context = new ParseContext();
			var cached = {};
			for(var path in xmlSourceMap){
				cached[path] = xmlSourceMap[path].getValue();
			}
			cached["/source.xhtml"] = templateEditor.getValue();
			var baseXMLLoader = context.loadXML;
			context.loadXML = function(uri){
				if(uri.path){
					if(uri.path in cached){
						uri = cached[uri.path];
					}else{
						$log.warn("未知文件路径",uri.path)
					}
				}
				return baseXMLLoader.call(context,uri);
			}
			context.parse(context.createURI('/source.xhtml'));
			return context;
		}
		function compileToJS(){
			try{
				var context = buildContext();
				var litecode = context.toList();
				var translator = new JSTranslator();//'.','/','-','!','%'
				translator.liteImpl = 'lite__impl_';//avoid inline jslib 
				var jscode = translator.translate(litecode);
			}catch(e){
				$log.error("测试失败：模板编译异常：",e);
				return;
			}
			showResult(jscode);
			updateResultRunner('js',litecode,jscode);
		}
		function compileToPHP(){
			try{
				var context = buildContext();
				var litecode = context.toList();
				var pt = new PHPTranslator("/test.xhtml".replace(/[\/\-\$\.!%]/g,'_'));//'.','/','-','!','%'
				var phpcode = pt.translate(litecode);
			}catch(e){
				$log.error("测试失败：模板编译异常：",e);
				return;
			}
			showResult(phpcode);
			updateResultRunner('php',litecode,phpcode);
		}
		function compileToLite(){
			try{
				var context = buildContext();
				var litecode = context.toList();
				var litecode = stringifyJSON(litecode);
			}catch(e){
				$log.error("测试失败：模板编译异常：",e);
				return;
			}
			showResult(litecode);
			updateResultRunner('java',litecode,null);
		}
		function updateResultRunner(type,litecode,runcode){
			runStatus = {type:type,litecode:litecode,runcode:runcode}
			var runButton = document.getElementById("runButton");
			runButton.disabled=false
			runButton.value="运行("+type+")"
		}
		var runStatus = {}
		function runTemplate(){
			try{
				var js = jsonEditor.getValue();
				var data = window.eval('('+js+')');
			}catch(e){
				$log.error("测试失败：模拟数据异常："+e);
				return;
			}

			if(runStatus.type == 'js'){
				try{
					var code = runStatus.runcode;
					code = code.replace(/^function\(\$\__context__\)/m,"return $&");
					//alert(code)
					var tpl =  window.eval("(function(lite__impl_def,lite__impl_get){"+(code||null)+"})");
					//alert(code)
					tpl = new Template(tpl);
					
					var result = tpl.render(data);
				}catch(e){
					$log.error("测试失败：模板运行异常："+tpl.render+e);
					return;
				}
				showResult(result);
			}else {
				var loader = document.getElementById('resultLoader');
				loader.style.display = 'block';
				try{
					if(runStatus.type == 'php'){
						var code = runStatus.runcode+'\nlite_template_test_xhtml(json_decode('+stringifyJSON(stringifyJSON(data))+',true));';
						var url = 'http://litetest.sinaapp.com/?php='+encodeURIComponent(code)+'&t='+ +new Date();
						loader.innerHTML = '<h2>load php result ....</h2><p>php 预览环境由新浪appengine提供。<a href="'+url+'">手动预览</a></p>';
					
					}else{
						var code = runStatus.litecode;
						var model = stringifyJSON(data);
						var url = 'http://www.xidea.org:1981/lite/doc/runner.jsp?code='
							+encodeURIComponent(code)+'&model='
							+encodeURIComponent(model)+'&'+ +new Date();
						loader.innerHTML = '<h2>load java result ....</h2><p>java 预览环境由满江红开源组织提供。<a href="'+url+'">手动预览</a></p>';
					}
				}catch(e){
				}
				var s = document.createElement('script');
				s.src = url +'&callback=showResult'
				loader.appendChild(s);
			}
		}
		function showResult(result){
			var resultSource = document.getElementById('resultSource');
			exampleResult.style.display = 'block';
			resultEditor.setValue(result);
			var n = 0;
			var i = setInterval(function a(){
				resultSource.style.opacity = n/10;
				if(n++>10){
					document.getElementById('resultLoader').style.display = 'none'
					resultSource.style.opacity = 1;
					clearInterval(i);
				}
			},100)
		}
		//]]>
				</script>
			</div>
		</div>
		<div class="toolbar">
			<input type="button" value="编译(JS)" onclick="compileToJS()" />
			<input type="button" value="编译(PHP)" onclick="compileToPHP()" />
			<input type="button" title="lite" value="编译(Java)" onclick="compileToLite()" />
			<input type="button" id="runButton" disabled value="运行(?)"
				onclick="runTemplate()" />
		</div>
	</div>
</div>